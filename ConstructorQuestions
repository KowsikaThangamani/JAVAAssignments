

1. What is the purpose of a constructor in Java?
		A constructor is a block of codes which is used to initialize the object. It is called when an instance of the class is created.
		At the time of calling constructor, memory for the object is allocated in the memory.
		Every time an object is created using the new() keyword, at least one constructor is called.
		It calls a default constructor if there is no constructor available in the class. 
		In such case, Java compiler provides a default constructor by default.
		It is not necessary to write a constructor for a class. It is because java compiler creates a default constructor 
		if your class doesn't have any.
		
****************************************************************************************************************************************		
2. How does a constructor differ from a regular method in Java?
		A constructor is for initializing class variables only. But method is for writing business logic/functionality
		A constructors name should be the same as class name, but methods name may or may not be class name
		A constructor wont have any return type. For methods return type is mandatory
		A constructor will be called as soon as we create object of the class.
		Methods will be called when you create object of the class and use object reference to call the method
	
****************************************************************************************************************************************
3. Can a Java class have multiple constructors? If so, how are they differentiated?
		Yes A Java Class can have multiple constructors. THis is called constructor overloading. These constructors are differentiated
		by number and type and sequence of parameters.

****************************************************************************************************************************************
4. What happens if a constructor is not defined in a Java class?
		If you donâ€™t implement any constructor in your class, the Java compiler inserts default constructor into your code 
		on your behalf. You will not see the default constructor in your source code (the .java file) as it is inserted 
		during compilation and present in the bytecode (.class file).

****************************************************************************************************************************************
5. Can a constructor call other methods or constructors within the same class?
		Yes, To call a constructor we have to use "this" keyword
		To call a static method use ClassName.methodName
		To call a non static method simply use the methodname alone
		 
****************************************************************************************************************************************
6. What is the purpose of a default constructor in Java?
		Default constructor is used to initialize the variables with their default values
		Ex: null for String, 0 for int, 0.0 for double, false for boolean

****************************************************************************************************************************************
7. How can you differentiate between a default constructor and a constructor that takes in parameters?
		Default constructors wont have any parameters
		Parameterized constructors can have multiple parameters

****************************************************************************************************************************************
8. What is the access level of a constructor in Java?
		Public, Private, Protected, Default

****************************************************************************************************************************************
9. Can a constructor be private? If so, why would you want to make a constructor private?
		Yes, a constructor can be private. It is to restrict object creation. If a constructor is private we wont be able to 
		instantiate that class.

****************************************************************************************************************************************
10. Can a constructor call a method from another class? 
		Yes
		
****************************************************************************************************************************************
11. What is the purpose of a getter method in Java?

****************************************************************************************************************************************
12. Can a getter method return void?

****************************************************************************************************************************************
13. What is the access level of a getter method in Java?

****************************************************************************************************************************************
14. What is the purpose of a setter method in Java?

****************************************************************************************************************************************
15. Can a setter method return a value other than void?

****************************************************************************************************************************************
16. Can a default constructor take in parameters?
		No, a default constructor wont take any parameters

****************************************************************************************************************************************
17. Can a constructor be overloaded in Java? If so, what does it mean to overload a constructor?
		Yes Constructor can be overloaded it should differ in number, type and sequence of the parameters

****************************************************************************************************************************************
18. Can you create an object of a Java class without calling a constructor?
		No.
		
****************************************************************************************************************************************
19. How are instance variables accessed and modified outside of the class they are defined in?
		If static then use with the respective class name
		If non static create object of the respective class to access and modify them

****************************************************************************************************************************************
20. What is the purpose of an instance variable in Java?
		Instance variables are used to store values that can be accessed by all the methods inside the class

****************************************************************************************************************************************
21. How are instance variables different from local variables in Java?
		Instance variables are declared outside the method and inside the class. Scope is for the entire class
		Local variable is declared inside the method and the scope is for that particular method only.
		
****************************************************************************************************************************************
22. What is the access level of an instance variable in Java?
		private, public, protected and default.

****************************************************************************************************************************************
23. What is the purpose of a method in Java?
		Method is used for writing business logic/functionality of the application

****************************************************************************************************************************************
24. Can a method call other methods within the same class?
		Yes
****************************************************************************************************************************************